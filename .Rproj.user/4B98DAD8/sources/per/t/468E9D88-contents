

# For writeup, see project log entry xxx.

library(mice)
library(Amelia)
library(dplyr)
library(dagR)
library(dplyr)

# not possible to extract the fitted imputation models themselves???
# https://github.com/amices/mice/issues/32
# "MICE only stores the imputed data, together with the model specification. All intermediate modelling coefficients of how to arrive at the imputations are discarded."
# This is ridiculous.

expit = function(p) exp(p) / (1 + exp(p))


# Global sim parameters -------------------------------------------------

# underlying sample size prior to missingness
n = 4000


# parameters
.p = data.frame(N = n,
                dag_name = "1B")


# Generate data  -------------------------------------------------

# VB, page 106 suggests this pattern shouldn't be possible to impute because it's "disconnected",
#  whatever that means (never actually defined)


# underlying data prior to missingness

#bm: take code from NMAR2 to generate data

# 1 analysis variable with collider
if ( .p$dag_name == "1B" ) {
  du = data.frame( U1 = rnorm( n = .p$N ),
                   U2 = rnorm( n = .p$N ),
                   C1 = rnorm( n = .p$N ) )  # only including this because neither imputation method runs with 1 variable
  
  du = du %>% rowwise() %>%
    mutate( A1 = rnorm( n = 1,
                        mean(1*U1) ),
            
            B1 = rnorm( n = 1,
                        mean(1*U1 + 1*U2) ),
            
            RA = rbinom( n = 1,
                         prob = expit(1*U2),
                         size = 1 ),
            
            A = ifelse(RA == 0, NA, A1) )
  
  
  colMeans(du, na.rm = TRUE)
}

cor(du)

# make dataset for imputation (standard way: all measured variables)
di_std = du %>% select(B1, C1, A)

# and for our imputation
# here, backdoor criterion holds conditional on nothing
di_ours = du %>% select(C1, A)

# ~ Standard MICE -------------------------------------------------
m=50
imps = mice(di_std, m=m, maxit = 100)

# check for problems
any(is.na( complete(imps,1) ))


### Analyze and pool
fits = with(imps, 
            lm(A~1))

p = pool(fits)
summary(p)

# c.f. truth for this single dataset
mean(du$A1)


# ~ Standard Amelia -------------------------------------------------

imps2 = amelia( as.data.frame(di_std),
                m=m)

# check for problems
any(is.na((imps2$imputations$imp1)))

fits = with(imps2, 
            lm(A~1))

p = pool(fits)
summary(p)


# ~ Our MICE -------------------------------------------------
m=50
imps = mice(di_ours, m=m, maxit = 100)

# check for problems
any(is.na( complete(imps,1) ))


### Analyze and pool
fits = with(imps, 
            lm(A~1))

p = pool(fits)
summary(p)



# ~ Standard Amelia -------------------------------------------------

imps2 = amelia( as.data.frame(di_ours),
                m=m)

# check for problems
any(is.na((imps2$imputations$imp1)))

fits = with(imps2, 
            lm(A~1))

p = pool(fits)
summary(p)

